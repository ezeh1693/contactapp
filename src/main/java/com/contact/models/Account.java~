package com.tolet.models;

import javax.persistence.*;

import com.tolet.enums.AccountType;
import com.tolet.enums.Permission;
import lombok.Data;
import javax.validation.constraints.*;
import java.util.*;
import java.util.stream.Collectors;

/**
 *
 * @author seyi
 */
@Data
@Entity
@Table(name="accounts")
public class Account extends Model {

    //@Size(min=3, max=30)
    private String name;

    //@Pattern(regexp=".*@.*", message="Must be an email address")
    //@Column(unique=true)
    private String email;

    //@Size(min=5)
    private String password;

    //@Pattern(regexp="\\d{11}", message="Must be a valid phone number")
    //@Column(unique=true)
    private String phone;

    private Boolean active;

    @Enumerated(EnumType.STRING)
    private AccountType accountType;

    @ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="account_roles",
            joinColumns=@JoinColumn(name="account_id"),
            inverseJoinColumns=@JoinColumn(name="role_id"))
    private Set<Role> roles;

    public Set<Permission> getPermissions() {
        if(roles == null){
            roles = new HashSet<>();
        }
        return roles.stream().map(role ->
            role.getPermissions().stream().map(perm -> perm).collect(Collectors.toSet())
        ).flatMap(Collection::stream).collect(Collectors.toSet());

    }


}
